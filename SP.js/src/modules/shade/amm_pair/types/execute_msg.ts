/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

import { Binary, Uint128, ContractInfo } from "../../../../modules/shared/contract/types";
import { CustomFee, TokenPairAmount } from "./common_types";
import { TokenAmount, TokenType } from "../../common_types";

export type ExecuteMsg =
  | Add_liquidity_to_a_m_m_contract_msg
  | Swap_tokens_msg
  | Receive_msg
  | Add_white_list_address_msg
  | Remove_whitelist_addresses_msg
  | Set_config_msg
  | Set_custom_pair_fee_msg
  | Set_arbitrage_contract_msg
  | Set_viewing_key_msg
  | Recover_funds_msg
  ;

// Individual Messages
export interface Add_liquidity_to_a_m_m_contract_msg {
  add_liquidity_to_a_m_m_contract: {
    deposit: TokenPairAmount;
    execute_sslp_virtual_swap?: boolean | null;
    expected_return?: Uint128 | null;
    staking?: boolean | null;
    [k: string]: unknown;
  }
}
export interface Swap_tokens_msg {
  swap_tokens: {
    execute_arbitrage?: ArbitrageCallback | null;
    expected_return?: Uint128 | null;
    /**
     * The token type to swap from.
     */
    offer: TokenAmount;
    to?: string | null;
    [k: string]: unknown;
  };
}
export interface Receive_msg {
  receive: {
    amount: Uint128;
    from: string;
    msg?: Binary | null;
    [k: string]: unknown;
  };
}
export interface Add_white_list_address_msg {
  add_white_list_address: {
    address: string;
    [k: string]: unknown;
  };
}
export interface Remove_whitelist_addresses_msg {
  remove_whitelist_addresses: {
    addresses: string[];
    [k: string]: unknown;
  };
}
export interface Set_config_msg {
  set_config: {
    admin_auth?: ContractInfo | null;
    [k: string]: unknown;
  };
}
export interface Set_custom_pair_fee_msg {
  set_custom_pair_fee: {
    custom_fee?: CustomFee | null;
    [k: string]: unknown;
  };
}
export interface Set_arbitrage_contract_msg {
  set_arbitrage_contract: {
    arbitrage_contract?: ContractInfo | null;
    [k: string]: unknown;
  };
}
export interface Set_viewing_key_msg {
  set_viewing_key: {
    viewing_key: string;
    [k: string]: unknown;
  };
}
export interface Recover_funds_msg {
  recover_funds: {
    amount: Uint128;
    msg?: Binary | null;
    to: string;
    token: TokenType;
    [k: string]: unknown;
  };
}







// Base Types
export interface ArbitrageCallback {
  execute: boolean;
  gas_limit?: number | null;
  msg: Binary;
  [k: string]: unknown;
}

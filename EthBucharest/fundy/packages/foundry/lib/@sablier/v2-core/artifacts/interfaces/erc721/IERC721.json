{
  "abi": [
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "balance", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getApproved",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "operator", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isApprovedForAll",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ownerOf",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "owner", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setApprovalForAll",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [{ "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "approved", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "indexed": true, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ApprovalForAll",
      "inputs": [
        { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "operator", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "indexed": true, "internalType": "uint256" }
      ],
      "anonymous": false
    }
  ],
  "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@prb/math/=node_modules/@prb/math/\",\":@prb/test/=node_modules/@prb/test/\",\":forge-std/=node_modules/forge-std/\",\":solady/=node_modules/solady/\",\":solarray/=node_modules/solarray/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.23+commit.f704f362" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "approved", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256", "indexed": true }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "operator", "type": "address", "indexed": true },
            { "internalType": "bool", "name": "approved", "type": "bool", "indexed": false }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address", "indexed": true },
            { "internalType": "address", "name": "to", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256", "indexed": true }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [{ "internalType": "uint256", "name": "balance", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [{ "internalType": "address", "name": "operator", "type": "address" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [{ "internalType": "address", "name": "owner", "type": "address" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
          },
          "balanceOf(address)": { "details": "Returns the number of tokens in ``owner``'s account." },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@prb/math/=node_modules/@prb/math/",
        "@prb/test/=node_modules/@prb/test/",
        "forge-std/=node_modules/forge-std/",
        "solady/=node_modules/solady/",
        "solarray/=node_modules/solarray/"
      ],
      "optimizer": { "enabled": true, "runs": 1000 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": { "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": "IERC721" },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
    "id": 54479,
    "exportedSymbols": { "IERC165": [83423], "IERC721": [54478] },
    "nodeType": "SourceUnit",
    "src": "108:4769:56",
    "nodes": [
      {
        "id": 54364,
        "nodeType": "PragmaDirective",
        "src": "108:23:56",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".0"]
      },
      {
        "id": 54365,
        "nodeType": "ImportDirective",
        "src": "133:47:56",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "file": "../../utils/introspection/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54479,
        "sourceUnit": 83424,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54478,
        "nodeType": "ContractDefinition",
        "src": "250:4626:56",
        "nodes": [
          {
            "id": 54377,
            "nodeType": "EventDefinition",
            "src": "378:82:56",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 54369,
              "nodeType": "StructuredDocumentation",
              "src": "285:88:56",
              "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
            },
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "name": "Transfer",
            "nameLocation": "384:8:56",
            "parameters": {
              "id": 54376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54371,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "409:4:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54377,
                  "src": "393:20:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54373,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "431:2:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54377,
                  "src": "415:18:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54375,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "451:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54377,
                  "src": "435:23:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 54374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:7:56",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "392:67:56"
            }
          },
          {
            "id": 54386,
            "nodeType": "EventDefinition",
            "src": "565:89:56",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 54378,
              "nodeType": "StructuredDocumentation",
              "src": "466:94:56",
              "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
            },
            "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "name": "Approval",
            "nameLocation": "571:8:56",
            "parameters": {
              "id": 54385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54380,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "596:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54386,
                  "src": "580:21:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54382,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "619:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54386,
                  "src": "603:24:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54384,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "645:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54386,
                  "src": "629:23:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 54383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:7:56",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "579:74:56"
            }
          },
          {
            "id": 54395,
            "nodeType": "EventDefinition",
            "src": "782:85:56",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 54387,
              "nodeType": "StructuredDocumentation",
              "src": "660:117:56",
              "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
            },
            "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
            "name": "ApprovalForAll",
            "nameLocation": "788:14:56",
            "parameters": {
              "id": 54394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54389,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "819:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54395,
                  "src": "803:21:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "803:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54391,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "842:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54395,
                  "src": "826:24:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54393,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "857:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54395,
                  "src": "852:13:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                  "typeName": {
                    "id": 54392,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:4:56",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "802:64:56"
            }
          },
          {
            "id": 54403,
            "nodeType": "FunctionDefinition",
            "src": "954:74:56",
            "nodes": [],
            "documentation": {
              "id": 54396,
              "nodeType": "StructuredDocumentation",
              "src": "873:76:56",
              "text": " @dev Returns the number of tokens in ``owner``'s account."
            },
            "functionSelector": "70a08231",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "963:9:56",
            "parameters": {
              "id": 54399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54398,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "981:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54403,
                  "src": "973:13:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "972:15:56"
            },
            "returnParameters": {
              "id": 54402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54401,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "1019:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54403,
                  "src": "1011:15:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 54400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:7:56",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1010:17:56"
            },
            "scope": 54478,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54411,
            "nodeType": "FunctionDefinition",
            "src": "1170:72:56",
            "nodes": [],
            "documentation": {
              "id": 54404,
              "nodeType": "StructuredDocumentation",
              "src": "1034:131:56",
              "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "6352211e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "1179:7:56",
            "parameters": {
              "id": 54407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54406,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1195:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54411,
                  "src": "1187:15:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 54405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:7:56",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1186:17:56"
            },
            "returnParameters": {
              "id": 54410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54409,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1235:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54411,
                  "src": "1227:13:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1227:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1226:15:56"
            },
            "scope": 54478,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54423,
            "nodeType": "FunctionDefinition",
            "src": "1809:99:56",
            "nodes": [],
            "documentation": {
              "id": 54412,
              "nodeType": "StructuredDocumentation",
              "src": "1248:556:56",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "b88d4fde",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "1818:16:56",
            "parameters": {
              "id": 54421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54414,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1843:4:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54423,
                  "src": "1835:12:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1835:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54416,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1857:2:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54423,
                  "src": "1849:10:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1849:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54418,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1869:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54423,
                  "src": "1861:15:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 54417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1861:7:56",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54420,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1893:4:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54423,
                  "src": "1878:19:56",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes" },
                  "typeName": {
                    "id": 54419,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1878:5:56",
                    "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1834:64:56"
            },
            "returnParameters": { "id": 54422, "nodeType": "ParameterList", "parameters": [], "src": "1907:0:56" },
            "scope": 54478,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54433,
            "nodeType": "FunctionDefinition",
            "src": "2606:78:56",
            "nodes": [],
            "documentation": {
              "id": 54424,
              "nodeType": "StructuredDocumentation",
              "src": "1914:687:56",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "42842e0e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "2615:16:56",
            "parameters": {
              "id": 54431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54426,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2640:4:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54433,
                  "src": "2632:12:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2632:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54428,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2654:2:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54433,
                  "src": "2646:10:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2646:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54430,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2666:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54433,
                  "src": "2658:15:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 54429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2658:7:56",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2631:43:56"
            },
            "returnParameters": { "id": 54432, "nodeType": "ParameterList", "parameters": [], "src": "2683:0:56" },
            "scope": 54478,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54443,
            "nodeType": "FunctionDefinition",
            "src": "3427:74:56",
            "nodes": [],
            "documentation": {
              "id": 54434,
              "nodeType": "StructuredDocumentation",
              "src": "2690:732:56",
              "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3436:12:56",
            "parameters": {
              "id": 54441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54436,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3457:4:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54443,
                  "src": "3449:12:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3449:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54438,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3471:2:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54443,
                  "src": "3463:10:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3463:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54440,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3483:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54443,
                  "src": "3475:15:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 54439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3475:7:56",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3448:43:56"
            },
            "returnParameters": { "id": 54442, "nodeType": "ParameterList", "parameters": [], "src": "3500:0:56" },
            "scope": 54478,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54451,
            "nodeType": "FunctionDefinition",
            "src": "3964:55:56",
            "nodes": [],
            "documentation": {
              "id": 54444,
              "nodeType": "StructuredDocumentation",
              "src": "3507:452:56",
              "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3973:7:56",
            "parameters": {
              "id": 54449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54446,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3989:2:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54451,
                  "src": "3981:10:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3981:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54448,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4001:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54451,
                  "src": "3993:15:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 54447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3993:7:56",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3980:29:56"
            },
            "returnParameters": { "id": 54450, "nodeType": "ParameterList", "parameters": [], "src": "4018:0:56" },
            "scope": 54478,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54459,
            "nodeType": "FunctionDefinition",
            "src": "4339:69:56",
            "nodes": [],
            "documentation": {
              "id": 54452,
              "nodeType": "StructuredDocumentation",
              "src": "4025:309:56",
              "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
            },
            "functionSelector": "a22cb465",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4348:17:56",
            "parameters": {
              "id": 54457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54454,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4374:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54459,
                  "src": "4366:16:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4366:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54456,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4389:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54459,
                  "src": "4384:13:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                  "typeName": {
                    "id": 54455,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4384:4:56",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4365:33:56"
            },
            "returnParameters": { "id": 54458, "nodeType": "ParameterList", "parameters": [], "src": "4407:0:56" },
            "scope": 54478,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54467,
            "nodeType": "FunctionDefinition",
            "src": "4558:79:56",
            "nodes": [],
            "documentation": {
              "id": 54460,
              "nodeType": "StructuredDocumentation",
              "src": "4414:139:56",
              "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "081812fc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "4567:11:56",
            "parameters": {
              "id": 54463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54462,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4587:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54467,
                  "src": "4579:15:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 54461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4579:7:56",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4578:17:56"
            },
            "returnParameters": {
              "id": 54466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54465,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4627:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54467,
                  "src": "4619:16:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4619:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4618:18:56"
            },
            "scope": 54478,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54477,
            "nodeType": "FunctionDefinition",
            "src": "4786:88:56",
            "nodes": [],
            "documentation": {
              "id": 54468,
              "nodeType": "StructuredDocumentation",
              "src": "4643:138:56",
              "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
            },
            "functionSelector": "e985e9c5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4795:16:56",
            "parameters": {
              "id": 54473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54470,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4820:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54477,
                  "src": "4812:13:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4812:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54472,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4835:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 54477,
                  "src": "4827:16:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 54471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4827:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4811:33:56"
            },
            "returnParameters": {
              "id": 54476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54475,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54477,
                  "src": "4868:4:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                  "typeName": {
                    "id": 54474,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4868:4:56",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4867:6:56"
            },
            "scope": 54478,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54367,
              "name": "IERC165",
              "nameLocations": ["271:7:56"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 83423,
              "src": "271:7:56"
            },
            "id": 54368,
            "nodeType": "InheritanceSpecifier",
            "src": "271:7:56"
          }
        ],
        "canonicalName": "IERC721",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 54366,
          "nodeType": "StructuredDocumentation",
          "src": "182:67:56",
          "text": " @dev Required interface of an ERC721 compliant contract."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [54478, 83423],
        "name": "IERC721",
        "nameLocation": "260:7:56",
        "scope": 54479,
        "usedErrors": [],
        "usedEvents": [54377, 54386, 54395]
      }
    ],
    "license": "MIT"
  },
  "id": 56
}
